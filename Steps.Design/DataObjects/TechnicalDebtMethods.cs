using System;

namespace Empiria.Steps.Design.DataObjects {


  ///<summary>WARNING: Last minute demo technical debt isolated methods.</summary>
  static public class TechnicalDebtMethods {

    #region Methods


    static internal string GetActionName(this StepDataObject _stepDataObject) {
      string namedKey = _stepDataObject.DataItem.NamedKey;

      if (namedKey.Contains("WebForm")) {
        return "Edit";

      } else if (namedKey.Contains("WebGrid")) {
        return "Edit";

      } else if (namedKey.Contains("FillOut")) {
        return "Upload completed file";

      } else if (namedKey.Contains("Autogenerated")) {
        return "Generate file";

      } else if (namedKey.Contains("GenerateFilesFolder")) {
        return "Generate folder";

      } else if (namedKey.Contains("Attach")) {
        return "Attach file";

      } else if (namedKey.Contains("Database")) {
        return "Connect";

      }
      return "Unknown";
    }


    static internal string GetMediaFormat(this StepDataObject _stepDataObject) {
      string template = _stepDataObject.DataItem.Template;
      string namedKey = _stepDataObject.DataItem.NamedKey;

      if (template.EndsWith("pdf") || namedKey.Contains("PDF")) {
        return "PDF";

      } else if (template.EndsWith("xlsx") || namedKey.Contains("Excel")) {
        return "Excel";

      } else if (namedKey.Contains("WebForm")) {
        return "WebForm";

      } else if (namedKey.Contains("WebGrid")) {
        return "WebGrid";

      } else if (namedKey.Contains("DataFile")) {
        return "DataFile";

      } else if (namedKey.Contains("Folder")) {
        return "Folder";

      } else if (namedKey.Contains("Database")) {
        return "Database";

      }
      return "Unknown";
    }

    #endregion Private methods

  }  // class TechnicalDebtMethods

}  // namespace Empiria.Steps.Design
